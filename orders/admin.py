from django.contrib import messages
from django.contrib import admin
from django.http import HttpResponse
from openpyxl import Workbook
from .models import Order, OrderItem
from django.urls import path
from django.shortcuts import redirect


class OrderItemInline(admin.TabularInline):
    model = OrderItem
    extra = 1
    fields = ('product', 'quantity', 'price', 'total_price')
    
    def get_cost(self, obj):
        return obj.get_cost()
    get_cost.short_description = '–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–∏'

class OrderAdmin(admin.ModelAdmin):
    list_display = ('user', 'order_number', 'status', 'address_pvz', 'delivery')
    list_filter = ('status',)
    inlines = [OrderItemInline]
    actions = ['export_pending_orders']
    change_list_template = 'admin/orders_change_list.html'  # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π —à–∞–±–ª–æ–Ω

    def get_queryset(self, request):
        qs = super().get_queryset(request)
        return qs.exclude(status='completed')

    # –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞

    
    def export_pending_orders(self, request, queryset):
        queryset = Order.objects.filter(status='pending')
        if not queryset.exists():
            self.message_user(request, "–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞", level=messages.WARNING)
            return redirect('admin:orders_order_changelist')
        
        wb = Workbook()
        ws = wb.active
        ws.title = "Pending Orders"
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏
        headers = [
            '–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞', 
            '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', 
            '–°—Ç–∞—Ç—É—Å',
            '–ê–¥—Ä–µ—Å –ü–í–ó', 
            '–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏',
            '–û–±—â–∞—è —Å—É–º–º–∞'
        ]
        ws.append(headers)
        
        # –î–∞–Ω–Ω—ã–µ
        for order in queryset:
            total = sum(item.total_price for item in order.items.all())
            ws.append([
                order.order_number,
                str(order.user),
                order.get_status_display(),
                order.address_pvz,
                order.get_delivery_display(),
                total
               
            ])
        
        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
        response = HttpResponse(
            content_type='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
            headers={'Content-Disposition': 'attachment; filename="pending_orders.xlsx"'},
        )
        wb.save(response)
        return response
    
    export_pending_orders.short_description = "üì§ –≠–∫—Å–ø–æ—Ä—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞—Å–æ–≤ (–æ–∂–∏–¥–∞—é—â–∏–µ)"

    # –î–æ–±–∞–≤–ª—è–µ–º URL –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö
    def get_urls(self):
        urls = super().get_urls()
        custom_urls = [
            path('export-all-pending/', self.export_all_pending, name='export_all_pending'),
        ]
        return custom_urls + urls

    def export_all_pending(self, request):
        print("export_all_pending", request)
        return self.export_pending_orders(
            request, 
            Order.objects.filter(status='pending')
        )
    
admin.site.register(Order, OrderAdmin)
